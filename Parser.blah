# class CLASS_NAME
#   [precedance table]
#   [token declarations]
#   [expected number of S/R conflict]
#   [options]
#   [semantic value convertion]
#   [start rule]
# rule
#   GRAMMARS

class Parser

    prechigh
      # nonassoc '++'
      # left     '*' '/'
      # left     '+' '-'
      # right    '='
    preclow


    token 

        CREATE BOT EXECUTE IF ELSE WHILE INT BOOL CHAR STORE RECIEVE ON END ACTIVATE 
        ACTIVATION ADVANCE DACTIVATE DEACTIVATION DEFAULT COLLECT AS DROP LEFT RIGHT UP 
        DOWN READ TRUE FALSE

        MENORIGUAL MAYORIGUAL NOIGUAL CONJUNCION DISYUNCION NEGACION MENOR MAYOR IGUAL 

        COMA PUNTO DOSPUNTOS PARABRE PARCIERRA 

        SUMA RESTA MULT DIV MOD 

        IDENT CHARACTER NUM 
        ME

    rule

    program
    : CREATE declarationList EXECUTE instructionList END
    | EXECUTE instructionList END
    ;


    declarationlist
    : declaration
    | declarationList declaration
    ;

    declaration 
    : type BOT identifierList behaviorList END
    | type BOT identifierList END
    ;

    identifierList
    : IDENT 
    | identifierList COMA IDENT
    ;

    type
    : INT
    | BOOL
    | CHAR 
    ;

    behaviorList
    : behavior
    | behaviorList behavior
    ;

    behavior
    : ON condition DOSPUNTOS botInstruction END
    ; 

    instructionList
    : instruction 
    | instructionList instruction 
    ;

    instruction
    : ACTIVATE  identifierList  PUNTO
    | ADVANCE identifierList  PUNTO
    | DEACTIVATE identifierList PUNTO
    | instruction instruction 
    | conditional  
    | undfiter 
    | program
    ; 

    conditional
    : IF boolExpr DOSPUNTOS instruction END
    | IF boolExpre DOSPUNTOS instruction ELSE DOSPUNTOS instruction END
    ;

    undfiter
    : WHILE boolExpr DOSPUNTOS instruction END
    ;

    botInstruction
    : STORE expression PUNTO
    | COLLECT AS IDENT PUNTO
    | COLLECT PUNTO
    | DROP expression PUNTO
    | direction PUNTO
    | direction aritExpr PUNTO
    | READ PUNTO
    | READ AS IDENT PUNTO
    | botInstruction botInstruction
    ;

    direction
    : LEFT
    | RIGHT
    | UP
    | DOWN
    ;

    condition
    : ACTIVATION
    | DEACTIVATION
    | boolExpr
    | DEFAULT
    ;

    literal
    : NUM
    | TRUE
    | FALSE
    | CHARACTER
    | IDENT 
    | ME
    ;

    expression
    : literal
    | expression SUMA expression  
    | expression RESTA expression 
    | expression MULT expression 
    | expression DIV expression 
    | expression MOD expression
    | RESTA expression
    | PARABRE expression PARCIERRA
    | NEGACION expression
    | expression CONJUNCION expression 
    | expression DISYUNCION expression
    | expression MENORIGUAL expression 
    | expression MAYORIGUAL expression 
    | expression IGUAL expression 
    | expression NOIGUAL expression 
    | expression MENOR expression 
    | expression MAYOR expression 
    ;
        
end